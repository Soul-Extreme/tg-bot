name: Deploy SE Telegram Bot

on:
  push:
    branches:
      - main

jobs:
  deploy:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        node-version: [18.x]
        python-version: ["3.10"]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Node
        uses: actions/setup-node@v3
        with:
          node-version: ${{ matrix.node-version }}

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Environment
        run: |
          echo "TELEGRAM_BOT_TOKEN=${{ secrets.TELEGRAM_BOT_TOKEN }}" >> $GITHUB_ENV

      - name: Serverless Deploy
        uses: dhollerbach/actions.serverless-with-python-requirements@v2
        env:
          AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
          AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          STAGE: dev

  checkScriptChanges:
    needs: deploy
    runs-on: ubuntu-latest
    outputs:
      set_webhook_changed: ${{ steps.changes.outputs.set_webhook }}
    steps:
      - uses: actions/checkout@v3

      - uses: dorny/paths-filter@v2
        id: changes
        with:
          filters: |
            set_webhook:
              - 'scripts/set_webhook'

  setWebhook:
    needs: checkScriptChanges
    runs-on: ubuntu-latest
    if: needs.checkScriptChanges.outputs.set_webhook_changed == 'true'
    strategy:
      matrix:
        python-version: [ "3.10" ]
    steps:
      - uses: actions/checkout@v3

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: ${{ matrix.python-version }}

      - name: Setup Python Requirements
        run: pip install requests

      - name: Set Webhook
        env:
          TELEGRAM_BOT_TOKEN: ${{ secrets.TELEGRAM_BOT_TOKEN }}
          TG_BOT_ENDPOINT: ${{ secrets.TG_BOT_ENDPOINT }}
        run: |
          python scripts/set_webhook.py